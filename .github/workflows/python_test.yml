name: Test1_python

on:
  push:
    branches:
      - main  # Se ejecuta en cada push a la rama principal
  pull_request:
    branches:
      - main  # Tambi√©n en los pull requests a la rama principal

jobs:
    apple_job:
      runs-on: ubuntu-latest
      steps:
        - name: Preparar la manzana üçé
          run: echo "Lavando la manzana. prueba 2.."
        - name: Cortar la manzana
          run: echo "Cortando la manzana en rodajas..."
        - name: Verificar archivos despu√©s del checkout
          run: |
                echo "Contenido del repositorio:"
                ls -la
  
    banana_job:
      runs-on: ubuntu-latest
      steps:
        - name: Pelar la banana üçå
          run: echo "Peleando la bananassss..."
        - name: Cortar la banana
          run: echo "Cortando la banana en trozos..."
  
    grape_job:
      runs-on: ubuntu-latest
      needs: [apple_job, banana_job]  # Espera a que apple_job y banana_job terminen
      steps:
        - name: Lavar las uvas üçá
          run: echo "Lavando las uvas..."
        - name: Comer las frutas
          run: echo "Comiendo una ensalada de frutas üçéüçåüçá"
        
  
    build_CI:
      name: CI - Integraci√≥n Continua
      runs-on: ubuntu-latest
      needs: [apple_job, banana_job]  # Espera a que apple_job y banana_job terminen
      steps:
        - name: Checkout del c√≥digo
          uses: actions/checkout@v4

        - name: Configurar Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'
        
        - name: Instalar dependencias
          run: pip install -r mle-intv-main/main_Train/config/requirements.txt         

          #- name: Ejecutar pruebas antes de construir
          #  run: pytest tests/
 
        
  
    build_CD:
      name: CD - Despliegue Continuo
      runs-on: ubuntu-latest
      needs: [build_CI]
      steps:
        
        - name: Checkout del repositorio
          uses: actions/checkout@v4
    
        - name: Mostrar directorio actual
          run: |
            echo "Directorio actual"
            pwd  # Muestra el directorio actual despu√©s de retroceder
            echo "Archivos y carpetas en el nuevo directorio:"
            ls -la

        - name: Construir la imagen Docker
          run: docker build -t prueba_cd -f mle-intv-main/Application/Local/Dockerfile .

        #- name: Ejecutar pruebas dentro del contenedor
        #  run: docker run prueba_cd -p 5000:5000

        #- name: Subir imagen a Docker Hub
        #  run: |
        #  echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        # docker tag myapp:latest myusername/myapp:latest
        #  docker push myusername/myapp:latest
      
